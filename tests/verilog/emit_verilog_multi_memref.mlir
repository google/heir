// Test emit-verilog supporting lowering multiple global memref constants and
// lookups to Verilog arrays and accessors.

// RUN: heir-translate %s --emit-verilog > %t
// RUN: FileCheck %s < %t

module {
  memref.global "private" constant @__constant_513xi16 : memref<513xi16> = dense<"0x
  memref.global "private" constant @__constant_513xi16_0 : memref<513xi16> = dense<"0x

  func.func @main(%arg0: i9) -> i16 {
    %1 = memref.get_global @__constant_513xi16 : memref<513xi16>
    %2 = memref.get_global @__constant_513xi16_0 : memref<513xi16>
    %3 = arith.index_cast %arg0 : i9 to index
    %4 = affine.load %1[%3] : memref<513xi16>
    %5 = affine.load %2[%3] : memref<513xi16>
    %6 = arith.addi %4, %5 : i16
    return %6 : i16
  }
}

// CHECK:      module main
// CHECK-NEXT:   input wire signed [8:0] [[ARG:.*]],
// CHECK-NEXT:   output wire signed [15:0] [[OUT:.*]]
// CHECK-NEXT: );
// CHECK-NEXT: wire signed [8207:0] [[V2:.*]];
// CHECK-NEXT: wire signed [8207:0] [[V3:.*]];
// CHECK-NEXT: wire signed [15:0] [[V4:.*]];
// CHECK-NEXT: wire signed [15:0] [[V5:.*]];
// CHECK-NEXT: wire signed [15:0] [[V6:.*]];
// CHECK-NEXT: assign [[V2]] = 8208'h{{[A-Z0-9]+}};
// CHECK-NEXT: assign [[V3]] = 8208'h{{[A-Z0-9]+}};
// CHECK-EMPTY:
// CHECK-NEXT:  assign [[V4]] = [[V2]][15 + 16 * [[ARG]] : 16 * [[ARG]]];
// CHECK-NEXT:  assign [[V5]] = [[V3]][15 + 16 * [[ARG]] : 16 * [[ARG]]];
// CHECK-NEXT:  assign [[V6]] = [[V4]] + [[V5]];
// CHECK-NEXT:  assign [[OUT]] = [[V6]];
// CHECK:      endmodule
