// Test emit-verilog supporting lowering global memref constants and lookups to
// Verilog arrays and accessors.

// RUN: heir-translate %s --emit-verilog > %t
// RUN: FileCheck %s < %t

module {
  memref.global "private" constant @__constant_513xi16 : memref<513xi16> = dense<"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000100010001000100010001000200020002000200020003000300030004000400050005000600060007000800080009000A000B000C000E000F00110012001400160018001A001D002000230026002A002E00330038003D00430049005000580061006A0074007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F007F00">
  func.func @main(%arg0: i9) -> i16 {
    %1 = memref.get_global @__constant_513xi16 : memref<513xi16>
    %3 = arith.index_cast %arg0 : i9 to index
    %4 = affine.load %1[%3] : memref<513xi16>
    return %4 : i16
  }
}

// CHECK:      module main
// CHECK-NEXT:   input wire signed [8:0] [[ARG:.*]],
// CHECK-NEXT:   output wire signed [15:0] [[OUT:.*]]
// CHECK-NEXT: );
// CHECK-NEXT: wire signed [8207:0] [[V2:.*]];
// CHECK-NEXT: wire signed [15:0] [[V3:.*]];
// CHECK-NEXT: assign [[V2]] = 8208'h{{[A-Z0-9]+}};
// CHECK-EMPTY:
// CHECK-NEXT:  assign [[V3]] = [[V2]][15 + 16 * [[ARG]] : 16 * [[ARG]]];
// CHECK-NEXT:  assign [[OUT]] = [[V3]];
// CHECK:      endmodule
