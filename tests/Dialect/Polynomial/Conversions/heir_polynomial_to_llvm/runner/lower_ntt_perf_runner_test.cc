#include <iostream>

#include "gtest/gtest.h"  // from @googletest
#include "tests/llvm_runner/memref_types.h"

extern "C" {
void _mlir_ciface_test_poly_ntt(StridedMemRefType<int32_t, 1>* result);
}

TEST(LowerNttPerfRunnerTest, CorrectOutput) {
  StridedMemRefType<int32_t, 1> result;
  int32_t data[65536];
  result.data = data;
  result.offset = 0;
  result.sizes[0] = 65536;
  result.strides[0] = 1;
  _mlir_ciface_test_poly_ntt(&result);
  ASSERT_EQ(result.sizes[0], 65536);

  // Checking the first 256 values
  int32_t expected_coeffs[] = {
      82466,  284102, 230668, 726464, 689117, 138714, 365947, 689485, 446187,
      553091, 780346, 411551, 281642, 459186, 220603, 654511, 59260,  764961,
      16666,  685313, 185494, 496060, 115841, 252683, 240479, 594524, 416523,
      15494,  599774, 602830, 747394, 26308,  114781, 332978, 68665,  68778,
      284638, 391464, 520202, 457892, 311791, 592237, 431,    355444, 570435,
      281966, 455422, 734625, 410275, 585604, 342610, 252937, 500915, 185942,
      350739, 503473, 503734, 299480, 274387, 731481, 221528, 248143, 42922,
      376637, 375877, 7330,   52495,  392501, 506041, 585691, 419166, 572553,
      443650, 195220, 778694, 189969, 70437,  767512, 88039,  102191, 533715,
      71537,  299910, 421484, 778028, 331670, 49663,  476567, 770219, 142409,
      17515,  334750, 191359, 756857, 138776, 189860, 310377, 269922, 123155,
      322425, 196530, 572988, 387881, 693640, 649776, 180305, 190535, 671521,
      500677, 572629, 639529, 7917,   496775, 754601, 342810, 352620, 566306,
      192070, 411491, 314939, 65466,  746207, 74857,  323561, 684125, 410365,
      403750, 86735,  609582, 589955, 168067, 182598, 372487, 426906, 280440,
      93888,  459279, 340251, 61319,  425866, 96770,  757022, 599341, 550851,
      150353, 279359, 514129, 470867, 634484, 71518,  359067, 663842, 358108,
      255984, 743819, 498698, 338391, 618044, 205702, 536924, 551736, 198363,
      87452,  46470,  585248, 53857,  443489, 387573, 549213, 461919, 341020,
      557268, 104295, 510410, 422064, 41391,  399312, 356900, 82705,  43467,
      289311, 403719, 348615, 325627, 401499, 501031, 41324,  743151, 558730,
      487703, 692004, 691852, 215177, 212269, 251863, 170361, 768210, 250989,
      195699, 531621, 255600, 370065, 26502,  201868, 125163, 363038, 700427,
      30487,  391928, 52856,  452124, 759967, 531073, 116689, 362042, 255716,
      315098, 391743, 38415,  367529, 504177, 343228, 496991, 442943, 362269,
      661169, 394207, 476331, 361445, 67053,  730805, 597631, 3379,   238251,
      159057, 287526, 671488, 618631, 525038, 695869, 91737,  47054,  509029,
      227973, 127210, 689448, 370642, 79893,  400573, 206914, 428506, 778137,
      563541, 644030, 376996, 612443};
  for (int i = 0; i < 256; ++i) {
    EXPECT_EQ(result.data[i], expected_coeffs[i]);
  }

  for (int i = 256; i < 65536; ++i) {
    EXPECT_EQ(result.data[i], 42);
  }
}
